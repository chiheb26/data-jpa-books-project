
spring.datasource.url=jdbc:mysql://localhost:3306/book?createDatabaseIfNotExist=true
spring.datasource.username=root
#spring.datasource.password=

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
# drop n create table, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto= update



#Turn Statistics on and log SQL stmts
logging.level.org.hibernate=info
logging.level.org.hibernate.SQL=debug 
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
 
#If want to see very extensive logging
#spring.jpa.properties.hibernate.generate_statistics=true
#logging.level.org.hibernate.type=trace
#logging.level.org.hibernate.stat=debug

spring.jpa.properties.hibernate.jdbc.time_zone=UTC

spring.jackson.serialization.fail-on-empty-beans=false

# logging properties
#disable log in console
#logging.pattern.console=
#file properties
#logging.file.path=/logging/global/logs
#logging.file.name=${logging.file.path}/global.log
#logging.logback.rollingpolicy.max-file-size=5MB
#logging.logback.rollingpolicy.max-history=5

scheduler.enabled=true
price.interval=PT02S
interval-in-cron=0 * * * * *

# flyway configuration
spring.flyway.enabled=true
# we can provide a comma-separated list of one or more classpath: or filesystem: locations
spring.flyway.locations=classpath:db/migration,filesystem:/another/migration/directory
# used if database has already some tables
spring.flyway.baseline-on-migrate=true

# actuator
management.endpoints.web.exposure.include=*